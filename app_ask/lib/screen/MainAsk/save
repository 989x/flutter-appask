import 'package:app_ask/constants.dart';
import 'package:app_ask/models/ask.dart';
import 'package:app_ask/screen/MainAsk/components/body.dart';
import 'package:flutter/material.dart';

import 'components/body.dart';

class MainAskScreen extends StatefulWidget {
  @override
  State<MainAskScreen> createState() => _MainAskScreenState();
}

class _MainAskScreenState extends State<MainAskScreen> {
  int _selectedIndex = 1;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: buildAppBar(

      ),
    
      //nothing have
      body: Body(

      ),

      //botton menu
      bottomNavigationBar: BottomNavigationBar(
        currentIndex: _selectedIndex,
        onTap: (value){
          setState(() {
            _selectedIndex = value;
          });
        },
        items: const [
          BottomNavigationBarItem(
            icon: Icon(Icons.travel_explore_rounded), 
            label: "find",
          ),
          BottomNavigationBarItem(
            icon: Icon(
              Icons.alt_route_rounded), 
              label: "all",
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.live_help_outlined), 
            label: "ask now"
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.all_inbox), 
            label: "new+"
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.smart_toy_outlined), 
            label: "me"
          ),
        ],
      ),
    );
  }

  //Bar title name
  AppBar buildAppBar() {
    return AppBar(
      // automaticallyImplyLeading: false,
      title: const Text("community"),
      actions: [
        IconButton(
          icon: const Icon(Icons.menu),
          onPressed: () {},
        ),
      ],
    );
  }
}




//new





// ignore_for_file: file_names, prefer_const_constructors

import 'package:app_ask/screen/MainAsk/components/all-screen/body.dart';

import 'package:flutter/material.dart';

import '../../../../../models/results_model.dart';

import 'package:app_ask/services%20/api_service.dart';

import '../appbar.dart';

class ArticlePage extends StatelessWidget {

  const ArticlePage({
    Key? key,
    required this.results,
    required this.press,
  }) : super(key: key);

  final Results results;
  final VoidCallback press;
  
  // late final Results results;

  // ArticlePage({this.results}) ;

  @override
  Widget build(BuildContext context) {
    return Scaffold(

      appBar: AppBar(

        foregroundColor: Colors.black54,

        title:Text(
          results.asking,
          style: TextStyle(
            fontWeight: FontWeight.bold,
            fontSize: 18,
            color: Colors.black87,
          ),
        ),

        actions: <Widget>[
          IconButton(
            icon: Icon(
              Icons.notifications_rounded,
              color: Colors.black54,
            ),
            onPressed: () {},
          )
        ],

      ),
      
      body: Padding(
        padding: const EdgeInsets.all(8.0),
        child: Column(
          children: [

            Container(
            height: 200.0,
            width: double.infinity,
              decoration: BoxDecoration(
              //let's add the height
                image: DecorationImage(
                    image: NetworkImage(results.image), fit: BoxFit.cover),
                borderRadius: BorderRadius.circular(12.0),
              ),
            ),

            SizedBox(
              height: 8.0,
            ),

            Container(
              decoration: BoxDecoration(image: NetworkImage(results.profile)),
            ),
            
            Container(
              padding: EdgeInsets.all(10.0),
              
              child: Text(
                results.name,
                style: TextStyle(
                  color: Colors.black,
                ),
              ),
            ),

            SizedBox(
              height: 8.0,
            ),

            Text(
              results.asking,
              style: TextStyle(
                fontWeight: FontWeight.bold,
                fontSize: 16.0,
              ),
            )
          ],
        ),
      ),
    );
  }
}










//

@override
  Widget build(BuildContext context) {
    return InkWell(

      child: Padding(
        padding: const EdgeInsets.symmetric(
          horizontal: kDefaultPadding, vertical: kDefaultPadding /4),
        child: Container(

          margin: const EdgeInsets.all(1),
          padding: const EdgeInsets.all(1),
          decoration: BoxDecoration(
              color: Colors.white,
              borderRadius: BorderRadius.circular(12),
              boxShadow: const [
                BoxShadow(
                  color: Colors.black12,
                  blurRadius: 6,
                ),
              ]
          ),

          child: Column(
            mainAxisAlignment: MainAxisAlignment.start,
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [

              Row(
                children: [

                  Padding(
                    padding: const EdgeInsets.all(2),
                    child: CircleAvatar(
                      radius: 16,
                      backgroundImage: NetworkImage(results.profile),
                    ),
                  ),

                  Padding(
                    padding:
                        // const EdgeInsets.symmetric(horizontal: kDefaultPadding),
                        const EdgeInsets.all(6),
                    //form Column
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Text(
                          results.name,
                          style: const TextStyle(
                            fontWeight: FontWeight.bold,
                            fontSize: 16,
                          ),
                        ),
                        const SizedBox(height: 2),
                      ],
                    ),
                  ),

                  Padding(
                    padding: const EdgeInsets.symmetric(
                        horizontal: kDefaultPadding / 2),
                    child: Opacity(
                      opacity: 0.8,
                      child: Text(
                        results.time,
                        style: const TextStyle(
                          fontWeight: FontWeight.bold,
                        ),
                      ),
                    ),
                  ),

                  const SizedBox(height: 8),

              //asking
              Text(
                results.asking,
                style: const TextStyle(
                  fontWeight: FontWeight.normal,
                  fontSize: 15,
                ),
              ),

                ],
              )
            ],
          ),
        ),
        ),
    );
  }